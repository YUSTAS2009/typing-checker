{"version":3,"sources":["../../src/main.js"],"names":["Letter","letter","id","incorrectStatus","input","document","querySelector","dashBoard","globalOptions","currentText","currentPosition","currentChar","lettersObjectsArray","firstRender","letterSpan","createElement","innerHTML","appendChild","createLetterObjects","arrayCheckLetters","split","map","index","push","compareLetters","current","char","charAt","stepBack","currentLetter","getElementById","toString","className","savingData","render","classList","add","init","oninput","inputValue","value","length","addEventListener","e","keyCode","preventDefault"],"mappings":"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","file":"main.js","sourcesContent":["// Letter Object constructor\r\nclass Letter {\r\n    constructor(letter, id = 0) {\r\n        this.letter = letter;\r\n        this.id = id;\r\n        this.incorrectStatus = false;\r\n    }\r\n}\r\n\r\n//DOM elements\r\nconst input = document.querySelector(\".typing-input\");\r\nconst dashBoard = document.querySelector('.dashboard');\r\n\r\n//Global Options\r\nlet globalOptions = {\r\n    currentText: 'There are many variations of passages of Lorem Ipsum available, but the majority ' +\r\n    'have suffered alteration in some form, by injected humour, or randomised words which look even slightly believable.',\r\n    currentPosition: null,\r\n    currentChar: '',\r\n    lettersObjectsArray: [],\r\n    firstRender() {\r\n        for (let letter of this.lettersObjectsArray ) {\r\n            let letterSpan = document.createElement('span');\r\n            letterSpan.innerHTML = letter.letter;\r\n            letterSpan.id = letter.id;\r\n            dashBoard.appendChild(letterSpan);\r\n        }\r\n    },\r\n    createLetterObjects() {\r\n        const arrayCheckLetters = this.currentText.split('');\r\n        arrayCheckLetters.map((letter, index) => {\r\n           this.lettersObjectsArray.push(new Letter(letter, index));\r\n        });\r\n    },\r\n    compareLetters(current, char) {\r\n        return this.currentText.charAt(current) === char;\r\n    },\r\n    stepBack() {\r\n        let currentLetter = document.getElementById(this.currentPosition.toString());\r\n        this.lettersObjectsArray[this.currentPosition].incorrectStatus = false;\r\n        //Removing classes of previous letter\r\n        currentLetter.className = '';\r\n    },\r\n    savingData(current, char) {\r\n        if (this.compareLetters(current, char)) {\r\n            this.lettersObjectsArray[current].incorrectStatus = false;\r\n        }else {\r\n            this.lettersObjectsArray[current].incorrectStatus = true;\r\n        }\r\n    },\r\n    render(current, char) {\r\n        let currentLetter = document.getElementById(current);\r\n        //Saving data for future needs\r\n        this.savingData(current, char);\r\n        //For old browsers\r\n        //let color = this.compareLetters(current, char) ? 'green' : 'red';\r\n        // currentLetter.style.color = color;\r\n        currentLetter.classList.add(this.compareLetters(current, char) ? 'green' : 'red');\r\n    },\r\n    init() {\r\n        this.createLetterObjects();\r\n        this.firstRender();\r\n    }\r\n};\r\n\r\n//Events\r\ninput.oninput = () => {\r\n    let inputValue = input.value;\r\n\r\n    if (inputValue.length <= 0) {\r\n        globalOptions.currentPosition = null;\r\n    }else {\r\n        globalOptions.currentPosition = inputValue.length -1;\r\n    }\r\n\r\n    if (inputValue.length > 1) {\r\n        globalOptions.currentChar = inputValue.charAt(inputValue.length - 1);\r\n    }else {\r\n        globalOptions.currentChar = inputValue;\r\n    }\r\n    //Updating current char color\r\n    globalOptions.render(globalOptions.currentPosition, globalOptions.currentChar);\r\n};\r\n\r\ninput.addEventListener(\"keydown\", e => {\r\n    if (e.keyCode === 37 || e.keyCode === 38 || e.keyCode === 39 || e.keyCode === 40) {\r\n        e.preventDefault();\r\n        return false;\r\n    }\r\n    if (e.keyCode === 8) {\r\n        globalOptions.stepBack();\r\n    }\r\n}, false);\r\n\r\n//Initialization\r\nglobalOptions.init();\r\n\r\n"]}